---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { getCollection } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import FeaturedImage from "../components/FeaturedImage.astro";
import { SITE_TITLE } from "../consts";

const allPosts = (await getCollection("blog")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);
const totalPages = Math.ceil(allPosts.length / 10);
const posts = allPosts.slice(0, 10);
---

<!doctype html>
<html lang="ja">
  <head>
    <title>{SITE_TITLE}</title>
    <BaseHead />
    <script
      type="application/ld+json"
      set:html={JSON.stringify({
        "@context": "http://schema.org",
        "@type": "ItemList",
        itemListElement: posts.map((post, index) => {
          return {
            "@type": "ListItem",
            position: index + 1,
            url: `https://memolog.org/${post.id}.html`,
          };
        }),
      })}
    />
  </head>
  <body>
    <Header />
    <div class="container">
      <main class="main">
        {
          posts.map((post) => (
            <article class="article-summary">
              <header class="header">
                <div>
                  <FormattedDate date={post.data.date} />
                </div>
                <h2 class="header__title article__title">
                  <a href={`/${post.id}.html`}>{post.data.title}</a>
                </h2>
                {post.data.featured && (
                  <FeaturedImage featured={post.data.featured} />
                )}
              </header>
              <div class="content">{post.data.excerpt}</div>
              <div class="read-more">
                <a href={`/${post.id}.html`}>üìñ Á∂ö„Åç„ÇíË™≠„ÇÄ</a>
              </div>
            </article>
          ))
        }
        <footer class="pagination">
          <span class="page-number current">1</span>
          {
            [...Array(7)]
              .map((_, i) => i + 2)
              .map((i) => {
                return (
                  <a class="page-number" href={`/page/${i}/`}>
                    {i}
                  </a>
                );
              })
          }
          <span class="space">‚Ä¶</span>
          {
            [...Array(4)]
              .map((_, i) => totalPages - i)
              .reverse()
              .map((i) => {
                return (
                  <a class="page-number" href={`/page/${i}/`}>
                    {i}
                  </a>
                );
              })
          }
          <a class="extend next" rel="next" href="/page/2/">Next</a>
        </footer>
      </main>
      <Footer />
    </div>
  </body>
</html>
