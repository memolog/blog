---
import type { CollectionEntry } from "astro:content";
import fs from "fs";
import path from "path";
import { imageSizeFromFile } from "image-size/fromFile";
import { JSDOM } from "jsdom";
import Picture from "./Picture.astro";
// @ts-ignore
import ColorThief from "colorthief";
import chroma from "chroma-js";

type Props = {
  featured: NonNullable<CollectionEntry<"blog">["data"]["featured"]>;
};

const { featured } = Astro.props;
let { name, ext } = path.parse(featured.image || "");
ext ||= ".svg";
const dir = "/assets/images";
const src = `${dir}/${name}/${name}${ext}`;
let width,
  height,
  color = featured.color || "",
  alt;

// Calculate the width and height if not provided
if (!width || !height) {
  const source = dir.replace(/^\//, "./public/");
  if (ext === ".svg") {
    const file = fs.readFileSync(
      path.resolve(source, `${name}/${name}${ext}`),
      "utf8"
    );
    const svgDom = new JSDOM(file).window.document.getElementsByTagName(
      "svg"
    )[0];
    const svgWidth = svgDom.getAttribute("width");
    const svgHeight = svgDom.getAttribute("height");
    if (svgWidth) {
      width = parseInt(svgWidth, 10);
    }
    if (svgHeight) {
      height = parseInt(svgHeight, 10);
    }
    color =
      color ||
      svgDom.getAttribute("fill") ||
      svgDom.children[0].getAttribute("fill") ||
      "";
  } else {
    const src = path.resolve(source, `${name}/${name}_medium${ext}`);
    color ||= chroma(await ColorThief.getColor(src)).hex();

    const dimension = await imageSizeFromFile(src);
    width = Math.min(dimension.width, 985);
    height = dimension.height * (width / dimension.width);
  }
}

const maxWidth = 985;
const maxHeight = 482;
width = width || maxWidth;
height = height || maxHeight;
color = color || "#f5f2f0";
alt = alt || "";

const wRatio = height / width;
const hRatio = width / height;

if (width > maxWidth) {
  width = maxWidth;
  height = Math.floor(width * wRatio);
  if (height < maxHeight) {
    height = maxHeight;
    width = Math.floor(height * hRatio);
  }
}

const webpSrc = `${dir}/${name}/${name}_medium.webp`;
const webpSrcSet = `${webpSrc}, ${webpSrc.replace(/\.webp$/, "@2x.webp")} 2x`;
---

<div class="header__feature" aria-hidden="true">
  <div class="featured__image" style=`background-color: ${color};`>
    {
      ext === ".svg" ? (
        <div style={`background-color: ${color}`}>
          <img
            src={`${dir}/${name}/${name}${ext}`}
            alt={alt}
            role="presentation"
            loading="lazy"
            width={width}
            height={height}
          />
        </div>
      ) : ext === ".webp" ? (
        <img
          src={webpSrc}
          srcset={webpSrcSet}
          role="presentation"
          loading="lazy"
          width={width}
          height={height}
          alt={alt}
        />
      ) : (
        <Picture src={src} alt="" width={width} height={height} />
      )
    }
  </div>
  {
    featured.author &&
      (featured.authorLink?.match(/unsplash/) ? (
        ext === ".svg" ? (
          // prettier-ignore
          <div class="featured__credit">Original photo by <a href={featured.authorLink} target="_blank" rel="noopener" tabindex="-1">{featured.author}</a> on <a href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener" tabindex="-1">Unsplash</a>, edited with <a href="https://github.com/fogleman/primitive"  target="_blank" rel="noopener">Primitive</a></div>
        ) : (
          // prettier-ignore
          <div class="featured__credit">Photo by <a href={featured.authorLink} target="_blank" rel="noopener" tabindex="-1">{featured.author}</a> on <a href="https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener" tabindex="-1">Unsplash</a></div>
        )
      ) : featured.author.match(/chatGPT/) ? (
        ext === ".svg" ? (
          // prettier-ignore
          <div class="featured__credit">Image by <a href="https://chatgpt.com/" target="_blank">ChatGPT (DALLÂ·E 3)</a>, edited with <a href="https://github.com/fogleman/primitive"  target="_blank" rel="noopener">Primitive</a></div>
        ) : (
          // prettier-ignore
          <div class="featured__credit">Image by <a href="https://chatgpt.com/" target="_blank">ChatGPT</a></div>
        )
      ) : featured.authorLink?.match(/artvee/) ? (
        // prettier-ignore
        <div class="featured__credit">Image from <a href={featured.authorLink} target="_blank" rel="noopener" tabindex="-1">{featured.author}</a> on <a href="https://artvee.com/" target="_blank" rel="noopener" tabindex="-1">Artvee</a></div>
      ) : (
        ""
      ))
  }
</div>
